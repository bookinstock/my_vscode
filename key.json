// Place your key bindings in this file to override the defaultsauto[]
[
  {
    "key": "ctrl+j",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.quickOpenSelectPrevious",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+h",
    "command": "workbench.action.navigateBack",
    "when": "canNavigateBack"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.navigateForward",
    "when": "canNavigateForward"
  },
  {
    "key": "ctrl+shift+space",
    "command": "editor.action.triggerParameterHints",
    "when": "editorHasSignatureHelpProvider && editorTextFocus"
  },
  {
    "key": "shift+cmd+space",
    "command": "-editor.action.triggerParameterHints",
    "when": "editorHasSignatureHelpProvider && editorTextFocus"
  },
  {
    "key": "ctrl+shift+j",
    "command": "editor.action.peekDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "key": "alt+f12",
    "command": "-editor.action.peekDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "key": "shift+f12",
    "command": "-editor.action.goToReferences",
    "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "key": "ctrl+k",
    "command": "goToPreviousReference",
    "when": "inReferenceSearchEditor || referenceSearchVisible"
  },
  {
    "key": "ctrl+j",
    "command": "goToNextReference",
    "when": "inReferenceSearchEditor || referenceSearchVisible"
  },
  {
    "key": "f12",
    "command": "-goToNextReference",
    "when": "inReferenceSearchEditor || referenceSearchVisible"
  },
  {
    "key": "f4",
    "command": "-goToNextReference",
    "when": "inReferenceSearchEditor || referenceSearchVisible"
  },
  {
    "key": "f4",
    "command": "-references-view.next",
    "when": "reference-list.hasResult && references-view.canNavigate"
  },
  {
    "key": "shift+f4",
    "command": "-references-view.prev",
    "when": "reference-list.hasResult && references-view.canNavigate"
  },
  {
    "key": "cmd+j",
    "command": "-editor.action.joinLines",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+j",
    "command": "-editor.action.joinLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+h",
    "command": "-deleteLeft",
    "when": "textInputFocus"
  },
  {
    "key": "alt+b",
    "command": "cursorWordLeft",
    "when": "textInputFocus"
  },
  {
    "key": "alt+f",
    "command": "cursorWordEndRight",
    "when": "textInputFocus"
  },
  {
    "key": "cmd+; c",
    "command": "-testing.runAtCursor",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+cmd+r",
    "command": "workbench.action.reloadWindow",
    "when": "isDevelopment"
  },
  {
    "key": "cmd+r",
    "command": "-workbench.action.reloadWindow",
    "when": "isDevelopment"
  },
  {
    "key": "shift+cmd+g",
    "command": "-workbench.action.terminal.findPrevious",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "shift+cmd+g",
    "command": "-editor.action.previousMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+, ctrl+g",
    "command": "workbench.view.scm",
    "when": "workbench.scm.active"
  },
  {
    "key": "ctrl+shift+g",
    "command": "-workbench.view.scm",
    "when": "workbench.scm.active"
  },
  {
    "key": "cmd+t",
    "command": "-scrypt.test.run",
    "when": "resourceFilename =~ /scrypttest\\.(js|ts)$/"
  },
  {
    "key": "cmd+t",
    "command": "-workbench.action.showAllSymbols"
  },
  {
    "key": "cmd+t",
    "command": "-workbench.action.quickOpen"
  },
  {
    "key": "ctrl+`",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "ctrl+`",
    "command": "-workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "ctrl+shift+`",
    "command": "workbench.action.terminal.new",
    "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
  },
  {
    "key": "ctrl+shift+`",
    "command": "-workbench.action.terminal.new",
    "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
  },
  {
    "key": "shift+cmd+t",
    "command": "-workbench.action.reopenClosedEditor"
  },
  {
    "key": "ctrl+, ctrl+e",
    "command": "workbench.view.explorer",
    "when": "viewContainer.workbench.view.explorer.enabled"
  },
  {
    "key": "shift+cmd+e",
    "command": "-workbench.view.explorer",
    "when": "viewContainer.workbench.view.explorer.enabled"
  },
  {
    "key": "ctrl+, ctrl+d",
    "command": "workbench.view.debug",
    "when": "viewContainer.workbench.view.debug.enabled"
  },
  {
    "key": "shift+cmd+d",
    "command": "-workbench.view.debug",
    "when": "viewContainer.workbench.view.debug.enabled"
  },
  {
    "key": "ctrl+, ctrl+x",
    "command": "workbench.view.extensions",
    "when": "viewContainer.workbench.view.extensions.enabled"
  },
  {
    "key": "shift+cmd+x",
    "command": "-workbench.view.extensions",
    "when": "viewContainer.workbench.view.extensions.enabled"
  },
  {
    "key": "cmd+b",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "cmd+b",
    "command": "-workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "shift+cmd+f",
    "command": "-workbench.view.search",
    "when": "workbench.view.search.active && neverMatch =~ /doesNotMatch/"
  },
  {
    "key": "ctrl+, ctrl+f",
    "command": "workbench.view.search"
  },
  {
    "key": "ctrl+alt+j",
    "command": "-notebook.cell.joinBelow",
    "when": "notebookEditorFocused"
  },
  {
    "key": "ctrl+j",
    "command": "editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "f12",
    "command": "-editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "shift+j",
    "command": "workbench.action.terminal.scrollDownPage",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "key": "pagedown",
    "command": "-workbench.action.terminal.scrollDownPage",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "key": "pagedown",
    "command": "-cursorPageDown",
    "when": "textInputFocus"
  },
  {
    "key": "pageup",
    "command": "-cursorPageUp",
    "when": "textInputFocus"
  },
  {
    "key": "shift+cmd+]",
    "command": "-workbench.action.nextEditor"
  },
  {
    "key": "shift+cmd+[",
    "command": "-workbench.action.previousEditor"
  },
  {
    "key": "cmd+j",
    "command": "-workbench.action.togglePanel"
  },
  {
    "key": "cmd+g",
    "command": "-workbench.action.terminal.findNext",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "cmd+g",
    "command": "-editor.action.nextMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+g",
    "command": "-workbench.action.gotoLine"
  },
  {
    "key": "cmd+shift+]",
    "command": "workbench.action.nextEditor"
  },
  {
    "key": "cmd+shift+[",
    "command": "workbench.action.previousEditor"
  },
  {
    "key": "cmd+l",
    "command": "workbench.action.nextEditor"
  },
  {
    "key": "cmd+h",
    "command": "workbench.action.previousEditor"
  },
  {
    "key": "alt+cmd+right",
    "command": "-workbench.action.nextEditor"
  },
  {
    "key": "alt+cmd+left",
    "command": "-workbench.action.previousEditor"
  },
  {
    "key": "cmd+,",
    "command": "-workbench.action.openSettings"
  },
  {
    "key": "shift+tab",
    "command": "editor.action.outdentLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+[",
    "command": "-editor.action.outdentLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "tab",
    "command": "editor.action.indentLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+]",
    "command": "-editor.action.indentLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+j",
    "command": "vim.remap",
    "when": "inputFocus && vim.mode == 'Normal' || vim.mode == 'Visual' || vim.mode == 'VisualLine'",
    "args": {
      "after": [
        "}"
      ],
    }
  },
  {
    "key": "cmd+k",
    "command": "vim.remap",
    "when": "inputFocus && vim.mode == 'Normal' || vim.mode == 'Visual' || vim.mode == 'VisualLine'",
    "args": {
      "after": [
        "{"
      ],
    }
  },
  {
    "key": "ctrl+k",
    "command": "togglePeekWidgetFocus",
    "when": "inReferenceSearchEditor || referenceSearchVisible"
  },
  {
    "key": "cmd+k f2",
    "command": "-togglePeekWidgetFocus",
    "when": "inReferenceSearchEditor || referenceSearchVisible"
  },
  {
    "key": "ctrl+-",
    "command": "-workbench.action.navigateBack",
    "when": "canNavigateBack"
  },
  {
    "key": "ctrl+shift+-",
    "command": "-workbench.action.navigateForward",
    "when": "canNavigateForward"
  },
  {
    "key": "ctrl+cmd+-",
    "command": "editor.foldAll",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+k cmd+0",
    "command": "-editor.foldAll",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+cmd+=",
    "command": "editor.unfoldAll",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+k cmd+j",
    "command": "-editor.unfoldAll",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+cmd+1",
    "command": "-workbench.action.moveEditorToFirstGroup"
  },
  {
    "key": "ctrl+cmd+1",
    "command": "editor.foldLevel1",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+k cmd+1",
    "command": "-editor.foldLevel1",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+cmd+2",
    "command": "editor.foldLevel2",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+k cmd+2",
    "command": "-editor.foldLevel2",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+cmd+3",
    "command": "editor.foldLevel3",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+k cmd+3",
    "command": "-editor.foldLevel3",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+1",
    "command": "-workbench.action.openEditorAtIndex1"
  },
  {
    "key": "cmd+k cmd+4",
    "command": "-editor.foldLevel4",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+k cmd+5",
    "command": "-editor.foldLevel5",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+k cmd+6",
    "command": "-editor.foldLevel6",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+k cmd+7",
    "command": "-editor.foldLevel7",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+k cmd+]",
    "command": "-editor.unfoldRecursively",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+1",
    "command": "workbench.action.openEditorAtIndex1"
  },
  {
    "key": "ctrl+c",
    "command": "welcome.goBack",
    "when": "inWelcome && activeEditor == 'gettingStartedPage'"
  },
  {
    "key": "ctrl+c",
    "command": "welcome.goBack",
    "when": "inWelcome && activeEditor == 'gettingStartedPage'"
  },
  {
    "key": "ctrl+c",
    "command": "workbench.action.closeQuickOpen",
    "when": "inQuickOpen"
  },
  {
    "key": "alt+cmd+[",
    "command": "-editor.fold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "alt+cmd+]",
    "command": "-editor.unfold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+-",
    "command": "editor.foldRecursively",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+k cmd+[",
    "command": "-editor.foldRecursively",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+=",
    "command": "editor.unfoldRecursively"
  },
  {
    "key": "cmd+d",
    "command": "-extension.vim_cmd+d",
    "when": "editorTextFocus && vim.active && vim.use<D-d> && !inDebugRepl"
  },
  {
    "key": "shift+alt+down",
    "command": "-notebook.cell.copyDown",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "key": "shift+alt+down",
    "command": "-editor.action.copyLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+cmd+d",
    "command": "editor.action.copyLinesDownAction"
  },
  {
    "key": "shift+alt+up",
    "command": "-notebook.cell.copyUp",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "key": "shift+alt+up",
    "command": "-editor.action.copyLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+cmd+v",
    "command": "editor.action.smartSelect.expand",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+cmd+right",
    "command": "-editor.action.smartSelect.expand",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+;",
    "command": "editor.action.jumpToBracket",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+cmd+\\",
    "command": "-editor.action.jumpToBracket",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+cmd+v",
    "command": "-quicktype.pasteJSONAsTypes",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+cmd+v",
    "command": "-quicktype.pasteJSONAsTypesAndSerialization",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+cmd+v",
    "command": "-notebook.cell.pasteAbove",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "key": "shift+cmd+v",
    "command": "-markdown.showPreview",
    "when": "!notebookEditorFocused && editorLangId == 'markdown'"
  },
  {
    "key": "shift+cmd+v",
    "command": "editor.action.smartSelect.expand",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+l",
    "command": "-expandLineSelection",
    "when": "textInputFocus"
  },
  {
    "key": "shift+cmd+\\",
    "command": "-workbench.action.terminal.focusTabs",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
  },
  {
    "key": "shift+cmd+\\",
    "command": "workbench.action.splitEditorDown"
  },
  {
    "key": "shift+cmd+j",
    "command": "rust-analyzer.joinLines",
    "when": "editorTextFocus && editorLangId == 'rust'"
  },
  {
    "key": "ctrl+shift+j",
    "command": "-rust-analyzer.joinLines",
    "when": "editorTextFocus && editorLangId == 'rust'"
  },
  {
    "key": "shift+cmd+j",
    "command": "editor.action.joinLines"
  },
  {
    "key": "cmd+t",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "alt+j",
    "command": "editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+k",
    "command": "editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+cmd+j",
    "command": "editor.action.peekDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "key": "cmd+r",
    "command": "editor.action.rename",
    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "f2",
    "command": "-editor.action.rename",
    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+l",
    "command": "-notebook.centerActiveCell",
    "when": "notebookEditorFocused"
  }
]